{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/gleb/Developer/vannabi/components/Wikipedia.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, Card, CardActionArea, CardActions, CardContent, IconButton, Typography } from '@material-ui/core';\nimport ShareIcon from '@material-ui/icons/Share';\nexport function Wikipedia(_ref) {\n  var data = _ref.data;\n  console.log(data);\n  return __jsx(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(CardActionArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, \"Wikipedia\"), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, data))), __jsx(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"Learn more\"), __jsx(IconButton, {\n    \"aria-label\": \"share\",\n    style: {\n      marginLeft: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(ShareIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }))));\n}\n_c = Wikipedia;\n\nWikipedia.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://en.wikipedia.org/w/api.php?action=query&prop=revisions&titles=Minsk&rvslots=*&rvprop=content&formatversion=2');\n\n          case 2:\n            res = _context.sent;\n            console.log(res);\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            data = _context.sent;\n            return _context.abrupt(\"return\", {\n              data: data\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar _c;\n\n$RefreshReg$(_c, \"Wikipedia\");","map":{"version":3,"sources":["/Users/gleb/Developer/vannabi/components/Wikipedia.tsx"],"names":["Button","Card","CardActionArea","CardActions","CardContent","IconButton","Typography","ShareIcon","Wikipedia","data","console","log","marginLeft","getInitialProps","ctx","fetch","res","json"],"mappings":";;;;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,cAAvB,EAAuCC,WAAvC,EAAoDC,WAApD,EAAiEC,UAAjE,EAA6EC,UAA7E,QAA+F,mBAA/F;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAMA,OAAO,SAASC,SAAT,OAA6B;AAAA,MAARC,IAAQ,QAARA,IAAQ;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,YAAY,MAAxB;AAAyB,IAAA,OAAO,EAAC,IAAjC;AAAsC,IAAA,SAAS,EAAC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAIE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,eAAlC;AAAkD,IAAA,SAAS,EAAC,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IADH,CAJF,CADF,CADF,EAWE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,KAAK,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIE,MAAC,UAAD;AAAY,kBAAW,OAAvB;AAA+B,IAAA,KAAK,EAAE;AAAEG,MAAAA,UAAU,EAAE;AAAd,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CAXF,CADF;AAsBD;KAzBeJ,S;;AA2BhBA,SAAS,CAACK,eAAV;AAAA,uEAA4B,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACRC,KAAK,CACrB,sHADqB,CADG;;AAAA;AACpBC,YAAAA,GADoB;AAI1BN,YAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AAJ0B;AAAA,mBAKPA,GAAG,CAACC,IAAJ,EALO;;AAAA;AAKpBR,YAAAA,IALoB;AAAA,6CAOnB;AAAEA,cAAAA,IAAI,EAAJA;AAAF,aAPmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { Button, Card, CardActionArea, CardActions, CardContent, IconButton, Typography } from '@material-ui/core';\nimport ShareIcon from '@material-ui/icons/Share';\n\ninterface WikipediaProps {\n  data: any;\n}\n\nexport function Wikipedia({ data }) {\n  console.log(data);\n\n  return (\n    <Card>\n      <CardActionArea>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Wikipedia\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {data}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Learn more\n        </Button>\n        <IconButton aria-label=\"share\" style={{ marginLeft: 'auto' }}>\n          <ShareIcon />\n        </IconButton>\n      </CardActions>\n    </Card>\n  );\n}\n\nWikipedia.getInitialProps = async (ctx) => {\n  const res = await fetch(\n    'https://en.wikipedia.org/w/api.php?action=query&prop=revisions&titles=Minsk&rvslots=*&rvprop=content&formatversion=2',\n  );\n  console.log(res);\n  const data = await res.json();\n\n  return { data };\n};\n"]},"metadata":{},"sourceType":"module"}